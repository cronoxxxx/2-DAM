### Register a new user
POST http://localhost:8080/register
Content-Type: application/json

{
  "name": "m",
  "password": "m",
  "role": "MANAGER"
}

### Login
POST http://localhost:8080/login
Content-Type: application/json

{
  "name": "c",
  "password": "c"
}

> {%
    client.global.set("auth_token", response.body.access_token)
    client.global.set("refresh_token", response.body.refresh_token)
%}

### Refresh token
POST http://localhost:8080/refresh
Content-Type: application/json

{
  "refreshToken": "{{refresh_token}}"
}

> {%
    client.global.set("auth_token", response.body.access_token)
    client.global.set("refresh_token", response.body.refresh_token)
%}

### Get all teams
GET http://localhost:8080/api/teams
Authorization: Bearer {{auth_token}}

### Get a specific team by ID
GET http://localhost:8080/api/teams/1
Authorization: Bearer {{auth_token}}

### Add a new team (manager only)
POST http://localhost:8080/api/teams
Authorization: Bearer {{auth_token}}
Content-Type: application/json

{
  "name": "Team t",
  "coach": "Coach Smith"
}

### Delete a team (manager or coach)
DELETE http://localhost:8080/api/teams/1
Authorization: Bearer {{auth_token}}

### Add a player to a team (coach only)
POST http://localhost:8080/api/teams/Team t/players
Authorization: Bearer {{auth_token}}
Content-Type: application/json

{
  "name": "John Doe"
}

### Update a player's name (manager only)
PUT http://localhost:8080/api/teams/Team Alpha/players/4?newName=Jane Doe
Authorization: Bearer {{auth_token}}

### Delete a player from a team (manager or coach)
DELETE http://localhost:8080/api/teams/Team t/players/4
Authorization: Bearer {{auth_token}}
